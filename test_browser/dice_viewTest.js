// Generated by CoffeeScript 1.7.1
var DiceView, Node, expect;

(typeof window !== "undefined" && window !== null) || (require('blanket'), expect = require('chai').expect, DiceView = require('dice_view').DiceView, DiceView.prototype.View = require('view').View, Node = (function() {
  function Node() {
    this.children = [];
    this.firstChild = false;
  }

  Node.prototype.appendChild = function(el) {
    this.parentElement = this.parent;
    this.children.push(el);
    return this.firstChild = true;
  };

  Node.prototype.removeChild = function(el) {
    this.children = [];
    return this.firstChild = false;
  };

  Node.prototype.createElement = function() {
    return new Node();
  };

  return Node;

})(), global.document = new Node());

describe('DiceView', function() {
  var dice, dv, id, p, up_e;
  dv = null;
  id = 1;
  p = document.createElement('div');
  p.remove_dice = function() {
    return false;
  };
  dice = {};
  dice.arg = '1d6';
  dice.get_total = function() {
    return '3';
  };
  dice.is_max = function() {
    return false;
  };
  dice.is_min = function() {
    return false;
  };
  dice.roll = function() {
    return {};
  };
  up_e = document.createElement('div');
  it('should have some output', function() {
    dv = new DiceView(id, p, up_e, dice);
    return expect(dv.out.children[0].innerHTML).to.equal(dice.get_total());
  });
  it('should have some max roll', function() {
    dice.get_total = function() {
      return '6';
    };
    dice.is_max = function() {
      return true;
    };
    dice.is_min = function() {
      return false;
    };
    expect(dv.roll_a.onclick()).to.equal(false);
    expect(dv.out.children[0].innerHTML).to.equal(dice.get_total());
    return expect(dv.out.children[0].className).to.equal('max');
  });
  it('should have some min roll', function() {
    dice.get_total = function() {
      return '1';
    };
    dice.is_max = function() {
      return false;
    };
    dice.is_min = function() {
      return true;
    };
    expect(dv.roll_a.onclick()).to.equal(false);
    expect(dv.out.children[0].innerHTML).to.equal(dice.get_total());
    return expect(dv.out.children[0].className).to.equal('min');
  });
  return it('should have some delete', function() {
    return expect(dv.delete_a.onclick()).to.equal(false);
  });
});
