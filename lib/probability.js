// Generated by CoffeeScript 1.7.1
(function() {
  (typeof exports !== "undefined" && exports !== null ? exports : this).Probability = (function() {
    function Probability(table) {
      this.table = table;
    }

    Probability.prototype.add_section = function(ar) {
      this.table.push(ar);
      return this;
    };

    Probability.prototype.get_string = function(which, join_string) {
      return ([].concat(this.get(which))).join(join_string);
    };

    Probability.prototype.get = function(which) {
      var row;
      if (which == null) {
        which = 1 + Math.floor((Math.random() * this.get_total_entries()) / 1);
      }
      row = this._get_row(which);
      return this._get_next(row);
    };

    Probability.prototype._get_next = function(row) {
      var out, r;
      if (typeof row[1] === 'number') {
        out = (function() {
          var _i, _ref, _results;
          _results = [];
          for (r = _i = 1, _ref = row[1]; 1 <= _ref ? _i <= _ref : _i >= _ref; r = 1 <= _ref ? ++_i : --_i) {
            _results.push(row[2].get());
          }
          return _results;
        })();
      } else {
        out = [row[1]];
        if (row[2]) {
          out.push(row[2].get());
        }
      }
      return out;
    };

    Probability.prototype._get_row = function(c) {
      var m, up, _i, _len, _ref;
      if (!c) {
        return [];
      }
      up = 0;
      _ref = this.table;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        m = _ref[_i];
        up += m[0];
        if (up >= c) {
          return m;
        }
      }
      return [];
    };

    Probability.prototype.get_total_entries = function() {
      var m;
      return ((function() {
        var _i, _len, _ref, _results;
        _ref = this.table;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          m = _ref[_i];
          _results.push(parseInt(m[0], 10));
        }
        return _results;
      }).call(this)).reduce(function(x, y) {
        return x + y;
      });
    };

    return Probability;

  })();

}).call(this);
