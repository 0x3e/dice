// Generated by CoffeeScript 1.7.1
(function() {
  (typeof exports !== "undefined" && exports !== null ? exports : this).DicesView = (function() {
    function DicesView(id, up_e, dice) {
      var i, _i, _len, _ref;
      this.id = id;
      this.up_e = up_e;
      this.dice = dice;
      this.views = [];
      this.in_vals = [];
      this.up = new View(this.up_e);
      this.con = this.up["new"]({
        element: 'div',
        id: "dices" + id,
        className: 'dices'
      });
      this.view = new View(this.con);
      this.form = this.view["new"]({
        element: 'form',
        className: 'dices_form'
      });
      this["in"] = this.view["new"]({
        element: 'input',
        className: 'dices_in',
        parent: this.form
      });
      this.sub = this.view["new"]({
        element: 'input',
        className: 'dices_sub',
        type: 'submit',
        parent: this.form
      });
      this.sub.value = 'Create Dice';
      this.out = this.view["new"]({
        element: 'div',
        id: 'dice'
      });
      this.sub.onclick = (function(_this) {
        return function() {
          _this.add_dice();
          return false;
        };
      })(this);
      if (Store.get("dices" + this.id)) {
        _ref = JSON.parse(Store.get("dices" + this.id));
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          i = _ref[_i];
          this.add_dice(i);
        }
      }
    }

    DicesView.prototype.add_dice = function(in_v) {
      var dice;
      if (!in_v) {
        in_v = this["in"].value;
      }
      dice = new this.dice(in_v);
      if (dice.is_good()) {
        this.views.push(new DiceView(this.views.length, this, this.out, dice));
        this.in_vals.push(in_v);
        return Store.set("dices" + this.id, JSON.stringify(this.in_vals.filter(function(i) {
          if (i) {
            return i;
          }
        })));
      }
    };

    DicesView.prototype.remove_dice = function(dice_view) {
      this.views[dice_view.id] = void 0;
      this.in_vals[dice_view.id] = void 0;
      Store.set("dices" + this.id, JSON.stringify(this.in_vals.filter(function(i) {
        if (i) {
          return i;
        }
      })));
      return dice_view = void 0;
    };

    return DicesView;

  })();

}).call(this);
